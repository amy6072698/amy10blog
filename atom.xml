<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Amy咂摳修練手冊</title>
  <icon>http://amy6072698.github.io/amy10blog/icon.png</icon>
  <subtitle>歡迎進入網頁的奇幻世界</subtitle>
  <link href="http://amy6072698.github.io/amy10blog/atom.xml" rel="self"/>
  
  <link href="http://amy6072698.github.io/amy10blog/"/>
  <updated>2025-04-29T15:31:20.059Z</updated>
  <id>http://amy6072698.github.io/amy10blog/</id>
  
  <author>
    <name>Amy咂摳</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>從零開始學 Hexo (3) | 下 Hexo 指令建立部落格環境吧 ~</title>
    <link href="http://amy6072698.github.io/amy10blog/2025/04/23/20250423-hexo-learning3/"/>
    <id>http://amy6072698.github.io/amy10blog/2025/04/23/20250423-hexo-learning3/</id>
    <published>2025-04-23T06:26:12.000Z</published>
    <updated>2025-04-29T15:31:20.059Z</updated>
    
    <content type="html"><![CDATA[<h2 id="建立-Hexo-環境的前置"><a href="#建立-Hexo-環境的前置" class="headerlink" title="建立 Hexo 環境的前置"></a>建立 Hexo 環境的前置</h2><p>經過前篇 <del>激烈的戰鬥</del> 努力的奮鬥，相信大家都安裝好 Hexo 了，那接下來要做的就是建立你的 Hexo 部落格環境啦 ~</p><h3 id="建立專案資料夾"><a href="#建立專案資料夾" class="headerlink" title="建立專案資料夾"></a>建立專案資料夾</h3><p>首先，在桌面(或其他你想建立專案資料夾的地方)建立一個專案資料夾，我這邊就先在桌面建立一個 amyHexo 的資料夾 <del>(沒錯，我桌面背景是紅色的</del> ，資料夾的名字可以自己取不用和我一樣<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/201726949J7FjsCAB7.png" alt="在桌面建立 amyHexo 的資料夾"></p><h3 id="用cd指令移動到指定的路徑"><a href="#用cd指令移動到指定的路徑" class="headerlink" title="用cd指令移動到指定的路徑"></a>用cd指令移動到指定的路徑</h3><p>再來開啟終端機執行 <code>cd</code> 指令移動到專案資料夾如下，你的資料夾要看你建立在哪個路徑再將你的路徑填入以下 <code>你的專案資料夾路徑</code> 位置裡 (注意：cd 後面有一個空白字元再接路徑)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 你的專案資料夾路徑</span><br></pre></td></tr></table></figure><p>以我建立的 amyHexo 的資料夾為例，就要執行 <code>cd c:\Users\User\Desktop\amyHexo</code> 這個指令，每個人的 User 名字可能不一樣那就看你自己叫什麼囉 ~</p><h3 id="快速填入指定資料夾路徑的方法"><a href="#快速填入指定資料夾路徑的方法" class="headerlink" title="快速填入指定資料夾路徑的方法"></a>快速填入指定資料夾路徑的方法</h3><p>如果你懶得輸入這麼長的路徑，有一個方法可以試試看，先在終端機輸入 <code>cd</code> 和一個空白字元，再把你想前往的專案資料夾用滑鼠按住左鍵拖曳到終端機視窗內<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/201726944tnpIC3tmI.png" alt="把想前往的資料夾拖曳到終端機"></p><p>然後放開滑鼠左鍵， <code>cd</code> 空白後面就會自動填入你拖曳進來的資料夾路徑囉 ~<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694ewCUEzUq4x.png" alt="放開就會自動填入該資料夾位置"></p><hr><h2 id="下-Hexo-指令建立環境"><a href="#下-Hexo-指令建立環境" class="headerlink" title="下 Hexo 指令建立環境"></a>下 Hexo 指令建立環境</h2><p>再來就進入重頭戲用 Hexo 指令來建立你的部落格環境囉 ~</p><p>前面講到 <code>cd</code> 移動到你的專案資料夾中，確定有移動到正確路徑下之後，執行以下指令，其中 <code>你的網站英文名稱</code> 可以自己取名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init 你的網站英文名稱</span><br></pre></td></tr></table></figure><p>以我的部落格網站英文名稱 amy10blog 為例，下完 <code>hexo init amy10blog</code> 指令後，終端機成功跑完回應就成功囉 ~<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694Z78eK5oMQd.png" alt="終端機執行 hexo init "></p><p>執行完以上指令後， Hexo 就會在專案資料夾中建立一個新資料夾，這個新資料夾會用剛剛指令輸入的 <code>你的網站英文名稱</code> 命名，以我的為例新資料夾就會叫 <code>amy10blog</code>：<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694KdrmLtwayg.png" alt="新資料夾名稱"></p><p>而新資料夾裡面是所有 Hexo 部落格環境會需要用到的東西，給瞄你一眼：<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694rIxaAoeMRt.png" alt="資料夾內 Hexo 部落格環境會需要用到的東西"></p><hr><h2 id="如何瀏覽-Hexo-為你建立的部落格網站呢？"><a href="#如何瀏覽-Hexo-為你建立的部落格網站呢？" class="headerlink" title="如何瀏覽 Hexo 為你建立的部落格網站呢？"></a>如何瀏覽 Hexo 為你建立的部落格網站呢？</h2><p>說了這麼多，要怎麼看我現在的部落格網站長什麼樣子呢？一樣要用 Hexo 的指令，接著往下看</p><p>使用 Hexo 的指令在本地查看你的部落格網站之前，要記得先移動到 Hexo 剛剛在專案資料夾中幫你建的新資料夾路徑下，以我的為例，就是要移到 <code>amy10blog</code> 資料夾：<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/201726944BzbPrOwIl.png" alt="先移動到 Hexo 剛剛在專案資料夾中幫你建的新資料夾路徑下"></p><p>接著，再執行以下指令，開啟 Hexo 伺服器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>如果嫌棄 <code>hexo server</code> 太長，下 <code>hexo s</code> 這個指令一樣可以開啟 Hexo 伺服器<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694y0YKDcJD69.png" alt="hexo server 開啟 Hexo 伺服器指令"></p><p>執行完之後它會回給你一段本地端的網址，點開網址就可以看見目前部落格的樣子囉 ~ 通常初始的部落格網站大家都會長這樣：<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694RC45P8QUN0.png" alt=" Hexo 部落格網站初始樣子"></p><p>後續會再教大家客製化的方法，不過會先把 Hexo 的基本指令講解完再討論這塊，也是有許多研究後的結果可以分享，那我們就下篇文章見囉 ~</p>]]></content>
    
    
    <summary type="html">如何帥氣的下指令建立 Hexo 環境😎，在本機查看你建立的 Hexo 部落格吧 ~</summary>
    
    
    
    <category term="Hexo" scheme="http://amy6072698.github.io/amy10blog/categories/Hexo/"/>
    
    
    <category term="前端" scheme="http://amy6072698.github.io/amy10blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Hexo" scheme="http://amy6072698.github.io/amy10blog/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>從零開始學 Hexo (2) | Hexo 安裝方法</title>
    <link href="http://amy6072698.github.io/amy10blog/2025/04/22/20250422-hexo-learning2/"/>
    <id>http://amy6072698.github.io/amy10blog/2025/04/22/20250422-hexo-learning2/</id>
    <published>2025-04-22T03:16:29.000Z</published>
    <updated>2025-04-29T15:25:32.858Z</updated>
    
    <content type="html"><![CDATA[<h2 id="想了解-Hexo-從官網開始"><a href="#想了解-Hexo-從官網開始" class="headerlink" title="想了解 Hexo 從官網開始"></a>想了解 Hexo 從官網開始</h2><p>想知道怎麼安裝 Hexo，第一站就是 <a href="https://hexo.io/zh-tw/">Hexo 的官網</a> ，進入官網後點上方導覽列的「文件」:<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694EThBdppvdH.png" alt="進入 Hexo 官網後點上方導覽列的文件"></p><p>然後你就可以看到 Hexo 很貼心的把安裝方式放在文件的第一頁囉~</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694pKvZW6QO9e.png" alt=" Hexo 的安裝方式在文件第一頁"></p><p>往下滑你可以看到更多關於 Hexo 安裝需要的東西：<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694sCbdH74cis.png" alt=" Hexo 安裝需求"></p><p>首先安裝需求的部分會需要先安裝 Node.js 和 Git，先從 Node.js 的安裝開始</p><hr><h2 id="安裝-Node-js"><a href="#安裝-Node-js" class="headerlink" title="安裝 Node.js"></a>安裝 Node.js</h2><p>如果你曾經看過以前的文章講解如何安裝 Node.js，那你就會看見以下這張圖，它有兩種下載按鈕，一個是 LTS 版本、一個是 Current 版本<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/201726942qi9mlKzLY.png" alt="舊版 Node.js 官網下載安裝按鈕"></p><p>這兩種版本差異簡單講就是 LTS (Long-term support) 長期支援版是當前穩定的版本，Current 則是最新版本，一般如果不是為了最新功能不會去下載 Current 版，所以這邊就下載 LTS 版本就可以囉~</p><p>不過現在<a href="https://nodejs.org/zh-tw">官網</a>已經改成只有 LTS 一個按鈕了，所以上面說明就當作是小補充吧，把那唯一的下載按鈕揍下去就對了<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694Lkc9MCfbK2.png" alt="新版 Node.js 官網下載安裝按鈕"></p><p>下載完成之後你的下載資料夾會出現 Node.js 的安裝檔，點兩下開啟檔案然後按 Next 按鈕、勾選同意，然後一路按 Next 按鈕最後再按下 Install 按鈕就可以完成安裝了</p><p>如果你按安裝過程中沒有指定位置，安裝完之後的 Node.js 一般會在本機的 Program Files 資料夾中：<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694to0E2nkZ3Z.png" alt="安裝完之後的 Node.js 一般會在本機的 Program Files 資料夾中"></p><hr><h2 id="安裝-Git"><a href="#安裝-Git" class="headerlink" title="安裝 Git"></a>安裝 Git</h2><p>要安裝 Git 就先進入它的<a href="https://git-scm.com/">官網</a>，進入後往下滑會看見一台小電腦在畫面上，它會判斷你是 Windows 還是 Mac 系統，按下下載按鈕：<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694adon1sG4bp.png" alt=" Git 官網下載安裝按鈕"></p><p>然後官網會跳轉下載頁面，並自動下載，若沒有自動觸發，可點擊下圖 Click here to download 連結手動下載：<br><img src="https://ithelp.ithome.com.tw/upload/images/20250429/20172694y749Bk58j7.png" alt=" Git 官網 Click here to download 連結手動下載"></p><p>下載完成之後你的下載資料夾會出現 Git 的安裝檔，一樣點兩下開啟檔案，再來就是按肯定的按鈕 <del>(說 Yes 就對了</del> ，然後按下安裝，這樣就完成安裝囉~</p><hr><h2 id="安裝-Hexo-前先檢查"><a href="#安裝-Hexo-前先檢查" class="headerlink" title="安裝 Hexo 前先檢查"></a>安裝 Hexo 前先檢查</h2><p>再來就要開啟終端機檢查有沒有成功安裝好 Node.js 和 Git 了，開啟終端機後輸入以下指令如果系統都有回應你剛剛安裝的版本號碼就表示你正確完成安裝囉~</p><h3 id="檢查是否安裝-Node-js"><a href="#檢查是否安裝-Node-js" class="headerlink" title="檢查是否安裝 Node.js"></a>檢查是否安裝 Node.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><h3 id="檢查-npm-是否正常"><a href="#檢查-npm-是否正常" class="headerlink" title="檢查 npm 是否正常"></a>檢查 npm 是否正常</h3><p>npm 是 Node.js 預設的軟體套件管理系統，會隨著 Node.js 安裝時一起安裝，因為之後會透過 npm 進行 Hexo 的安裝，所以一定要確保 npm 有正常安裝</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><h3 id="檢查是否安裝-Git"><a href="#檢查是否安裝-Git" class="headerlink" title="檢查是否安裝 Git"></a>檢查是否安裝 Git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><hr><h2 id="安裝-Hexo"><a href="#安裝-Hexo" class="headerlink" title="安裝 Hexo"></a>安裝 Hexo</h2><p>終於進入安裝 Hexo 的階段啦~~~ 確認以上軟體安裝完成後，接下來依照<a href="https://hexo.io/zh-tw/docs/#%E5%AE%89%E8%A3%9D-Hexo">官網的安裝指示</a>，執行以下指令就可以透過 npm 來安裝 Hexo 囉~</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="檢查-Hexo-是否安裝成功"><a href="#檢查-Hexo-是否安裝成功" class="headerlink" title="檢查 Hexo 是否安裝成功"></a>檢查 Hexo 是否安裝成功</h3><p>接下來別忘記檢查 Hexo 是否安裝成功，執行以下指令，如果有跑出版本號碼就恭喜你成功安裝 Hexo 囉🎉</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><hr><h2 id="你可能會遇到-PowerShell-執行原則問題"><a href="#你可能會遇到-PowerShell-執行原則問題" class="headerlink" title="你可能會遇到 PowerShell 執行原則問題"></a>你可能會遇到 PowerShell 執行原則問題</h2><p>如果你是使用 Windows 系統的 PowerShell 為執行指令的終端機，或你是開 VSCode 內的終端機(VSCode 預設使用的終端機是 PowerShell)，那在安裝時你可能會遇到 PowerShell 的執行原則問題 <del>(提前說以免有人再掉到坑裡，維護安全人人有責</del></p><h3 id="情況說明"><a href="#情況說明" class="headerlink" title="情況說明"></a>情況說明</h3><p>當你執行指令打算美美的完成 Hexo 安裝時，發現它回了一串錯誤給你，有可能長得像這樣：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo : 因為這個系統上已停用指令碼執行，所以無法載入 ...</span><br></pre></td></tr></table></figure><p>講一堆就是不給你安裝的意思，那有可能是 PowerShell 的執行原則產生的問題， Windows 預設的 powershell 執行原則為 <code>Restricted</code></p><p> <strong>PowerShell 有四種執行原則：</strong></p><ol><li>Restricted：所有 <code>PowerShell Script</code>(.ps1) 皆無法執行 (Windows系統預設)</li><li>AllSigned：所有 <code>PowerShell Script</code> 都要經過受信任的發行者簽屬過後才可執行</li><li>RemoteSigned：針對從異地下載下來的 <code>PowerShell Script</code> 需要經過受信任的發行者簽屬過後才可執行，本機的 <code>PowerShell Script</code> 可直接執行</li><li>Unrestricted：無限制，所有 <code>PowerShell Script</code> 皆可執行</li></ol><h3 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h3><p>想解決前面出現的錯誤其實只要改變執行原則的設定即可，但在改變之前要先執行以下指令確認 PowerShell 現在是哪個執行原則：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get-executionpolicy</span><br></pre></td></tr></table></figure><p>如果它回 <code>Restricted</code>，再往下執行以下指令，執行後會有視窗詢問，按下確定後就能將執行原則改為 <code>Remotesigned</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set-executionpolicy remotesigned</span><br></pre></td></tr></table></figure><p>但如果不幸還是跳出錯誤，長得像這樣：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy : 拒絕存取登錄機碼...</span><br></pre></td></tr></table></figure><p>那就再往下執行以下指令，就能成功執行了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy -Scope CurrentUser RemoteSigned</span><br></pre></td></tr></table></figure><p>希望大家還是不要踩到坑比較好，如果不幸遇到的話希望這個問題補充可以幫助到你，以上內容參考自<a href="https://akoncc.github.io/2019/11/01/vscode-cant-run-script/">這篇文章</a>，想了解更詳細內容可以去看看</p><p>那就先祝大家都順利安裝 Hexo 成功囉~ 我們下篇文章見🪄</p>]]></content>
    
    
    <summary type="html">了解 Hexo 安裝前需求與如何安裝 Hexo</summary>
    
    
    
    <category term="Hexo" scheme="http://amy6072698.github.io/amy10blog/categories/Hexo/"/>
    
    
    <category term="前端" scheme="http://amy6072698.github.io/amy10blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Hexo" scheme="http://amy6072698.github.io/amy10blog/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>從零開始學 Hexo (1) |  Hexo 是什麼？為什麼開始學 Hexo？</title>
    <link href="http://amy6072698.github.io/amy10blog/2025/04/21/20250421-hexo-learning1/"/>
    <id>http://amy6072698.github.io/amy10blog/2025/04/21/20250421-hexo-learning1/</id>
    <published>2025-04-21T02:12:31.000Z</published>
    <updated>2025-04-29T15:16:41.568Z</updated>
    
    <content type="html"><![CDATA[<h2 id="開始學-Hexo-的動機"><a href="#開始學-Hexo-的動機" class="headerlink" title="開始學 Hexo 的動機"></a>開始學 Hexo 的動機</h2><p>進入 Hexo 的簡單介紹之前，先說說我自己開始學 Hexo 的動機，因為我希望能建立一個自己的部落格網站，不只是當作平時學習前端知識的筆記收藏區，也希望透過這些文章分享能幫助到正在學習的新手，而 <del>本人比較懶</del> Hexo 因為能夠輕鬆完成一個部落格網站的架構，也有許多中文教學幫助初學者入門，建置屬於自己的專屬部落格網站，所以就下定決心要開始學習用 Hexo 完成屬於自己的部落格網站啦~</p><hr><h2 id="什麼是-Hexo？"><a href="#什麼是-Hexo？" class="headerlink" title="什麼是 Hexo？"></a>什麼是 Hexo？</h2><p>介紹什麼是 Hexo 之前，先想想如果要寫部落格文章，可能會用哪些方式去撰寫自己的文章？<br> <strong>1. 使用現有的部落格平台撰寫文章</strong> ，如：痞客邦、iT邦幫忙、Medium…<br> <strong>2. 自己架設部落格網站存放自己的文章</strong><br>接下來就談談這兩種方式的一些優缺比較吧~</p><h3 id="使用現有的部落格平台優缺"><a href="#使用現有的部落格平台優缺" class="headerlink" title="使用現有的部落格平台優缺"></a>使用現有的部落格平台優缺</h3><p>使用現有的部落格平台優點是簡單粗暴不太需要思考， <strong>只要專注在撰寫的文章內容即可</strong> ，因為是使用現有平台所以 <strong>平台本身會有一定的流量</strong> ，不太需要過度擔心自己的文章無法被搜尋到等複雜的 SEO 問題</p><p>但這樣的便利伴隨一定的缺點，那就是如果 <strong>平台收掉你辛苦寫的文章可能會遺失</strong> ，而且有些平台可能有個人主頁但版型都很一致性可變動部分不多、 <strong>無法讓你充分客製化想要的網頁樣式</strong></p><h3 id="架設部落格網站工具比較"><a href="#架設部落格網站工具比較" class="headerlink" title="架設部落格網站工具比較"></a>架設部落格網站工具比較</h3><p>看完上面使用現有部落格平台的缺點後，如果想避免有些人就會開始考慮架設自己的部落格網站，這時候就會需要一些方便快速的架站工具，如：WordPress、Hexo…，當然可能還有其他架站工具</p><p>但這邊先以我曾經使用過的 WordPress、Hexo 這兩個來說明，這兩個都是架站的工具，一樣都有多種網站主題可以選擇，讓想架設網站的人能夠快速架站，但兩者在架站上還是有差異的</p><ul><li><strong>WordPress：</strong> 是 <strong>動態網頁架站工具</strong> ，動態網頁通常會需要搭配一個資料庫，需要另外 <strong>支出動態伺服器的費用</strong> ；客製化網站方面：有提供視覺化的編輯器外掛，不懂程式碼其實也能勉強客製出一個網站</li><li><strong>Hexo：</strong> 是 <strong>靜態網頁架站工具</strong> ，可以想成是部落格網站架設工具，如果 <strong>搭配 GitHub 空間可以實現幾乎零成本的網站架設</strong> ；客製化網站方面：需要學習一些程式碼、會用終端機下指令比較容易客製出網站</li></ul><p>本人在進入神奇的程式碼世界前有學過一些 WordPress 可以大概說明兩種工具在客製化上面的使用差別， WordPress 雖然有視覺化的編輯器，但如果想進一步客製網站結構跟樣式還是必須要學習一些程式碼的，這也是為什麼我改行學程式碼了🤣</p><hr><h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>看過以上比較，你會發現使用 Hexo 架站雖然能省一些荷包成本，但相對的它就會需要更多的腦力成本，沒錯~ 要學習程式碼跟指令才能客製出自己的專屬部落格，不過別擔心之後我會帶大家一起學習 Hexo 的基本指令及其他延伸知識</p><hr><h2 id="心情小語"><a href="#心情小語" class="headerlink" title="心情小語"></a>心情小語</h2><p>其實 Hexo 在去年大概 4、5 月就已經初步學習過了，除了我自己進修上課的學習資源外，還有<a href="https://israynotarray.com/categories/hexo/">六角大前輩 Ray 的 Hexo 系列文章</a>，讓我決定在重新翻新架設<a href="https://amy6072698.github.io/amy10blog/">我的部落格</a>後，來分享自己在架設過程中發現並處理的問題，也會提到一些基本操作，再請大家多多支持~</p>]]></content>
    
    
    <summary type="html">開始學 Hexo 的動機以及常見部落格經營方式比較</summary>
    
    
    
    <category term="Hexo" scheme="http://amy6072698.github.io/amy10blog/categories/Hexo/"/>
    
    
    <category term="前端" scheme="http://amy6072698.github.io/amy10blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Hexo" scheme="http://amy6072698.github.io/amy10blog/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>如果不試一輩子都不知道自己能走這麼遠｜不知不覺寫了 1 年程式，前端工程師修煉之路</title>
    <link href="http://amy6072698.github.io/amy10blog/2025/04/15/20250415_reflections_on_learing_frontend/"/>
    <id>http://amy6072698.github.io/amy10blog/2025/04/15/20250415_reflections_on_learing_frontend/</id>
    <published>2025-04-14T16:27:22.000Z</published>
    <updated>2025-04-20T10:48:07.751Z</updated>
    
    <content type="html"><![CDATA[<h2 id="報名緣起"><a href="#報名緣起" class="headerlink" title="報名緣起"></a>報名緣起</h2><p>自從動了想轉職前端的念頭，怎麼動念的有緣再說 XDD</p><p>就開始上網瘋狂找前端學習資源，但始終不知道從何下手，後來看了一篇分享文章，發現我需要更系統化的學習所以購買六角學院的影音課程</p><p>但發現只是看影片學習成效不佳，自己摸索需要很多時間，中間曾嘗試其他單位，但課程內容過舊學習反而更吃力 (要花更多時間除錯</p><p>去年 4 月正當迷茫之際 <del>去找牙醫定期洗牙時 (這不是重點</del> ，一則臉書廣告讓我決定再試一次，於是我報名了 2024 年的前端工程師體驗營 (在報名截止最後一天</p><p>上完體驗營之後我發現自己不排斥寫程式 (反而喜歡上寫程式破解問題的過程，就這樣我毅然地踏上 <strong>六角學院長達 9 個月</strong> 的前端工程師修煉取經之路</p><p>廢話少說上表<br><img src="https://ithelp.ithome.com.tw/upload/images/20250414/20172694KjWc9r5pia.png" alt="2024 六角學院前端工程師培訓班時程表"></p><p>接下來就來說說經歷 9 個月修鍊過關斬將的心得吧~ (放一隻悟空加持🐵</p><hr><h2 id="團隊合作的重要-組隊去取經"><a href="#團隊合作的重要-組隊去取經" class="headerlink" title="團隊合作的重要 (組隊去取經"></a>團隊合作的重要 (組隊去取經</h2><p>作者我並不是本科系上完體驗營決定要轉職時，說不害怕是假的，但 <strong>不被認同比自己能力不足更讓我害怕</strong> ，畢竟能力可以靠進修跟實作來補足，自信卻會因為一直不被認同而消磨，這樣取經之路會更艱難</p><p>你也許會說非本科轉職本來就容易不被認同啊~ (沒錯，所以才要找一個正面積極的學習環境，可以選當然就要選能支持自己撐下去進修的環境，以免好不容易燃起的進修魂被別人一桶水澆滅</p><p>六角會依照問卷調查結果，將程度、背景差不多的學員分在一起組隊打怪，所以進修過程中我不用擔心沒人認同，我的隊友跟我一樣 <del>(是悟空🐵</del> 選了同樣的路</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20250414/20172694vuaAVSmcQ0.png" alt="隊友梗圖"></p><p>只是後續 <strong>團隊的時間管理、隊友積極度、與隊友的溝通</strong>，這些都與隊友程度背景相不相符無關，但卻會影響專案開發進度的關鍵，在這段與團隊一起開發專案的過程中 <strong>「當團隊出現狀況該如何應對」</strong> 是很重要的課題</p><hr><h2 id="團隊合作的好處是比一個人走走更遠"><a href="#團隊合作的好處是比一個人走走更遠" class="headerlink" title="團隊合作的好處是比一個人走走更遠"></a>團隊合作的好處是比一個人走走更遠</h2><p>一個人進修是很孤單、無助的，一群人互相幫助分工讓專案更完善，有隊友就能在專案開發或實作練習卡關時，提出來問題大家一起破關 (打怪，有時候真的就被我們這群臭皮匠找到網路大神的破解法了</p><p>在這段團隊合作的過程中我 學會如何跟隊友溝通合作，也 <strong>了解到互相配合、互相扶持、互相努力才能完成最終專案開發的成果</strong>，即使培訓課程已經結束我們也持續在交流不錯的技術學習資源，並持續優化我們的專案</p><hr><h2 id="最終-Boss-關：-React-作品實戰班"><a href="#最終-Boss-關：-React-作品實戰班" class="headerlink" title="最終 Boss 關： React 作品實戰班"></a>最終 Boss 關： React 作品實戰班</h2><p>經歷長達 9 個月的前端工程師培訓迎來最終 Boss 關，是最後一環，也是最重要的一環</p><p>必須和團隊完成一個 React 專案，而且看看前面的時程表，我必須兼顧 React 直播班的學習進度，並把學到的技術用在專案開發上</p><p>初學 React 很艱難，學習過程中不斷考驗我的 JavaScript 基礎， <strong>遇到困難怎麼辦？利用各種資源想辦法解決呀！</strong> 六角的學習資源、六角教練跟助教、網路上其他大神的破解法等</p><p>無論如何向前跑就對了！直播班每週都有作業，沒趕上進度等團隊討論完專案主題 <del>(就變成夾心餅乾餡了</del>，當然六角也很怕學員不交作業影響開發進度，所以會提供各種資源讓你救自己</p><p><img src="https://ithelp.ithome.com.tw/upload/images/20250414/20172694qxZ1j5esFt.png" alt="交作業梗圖"></p><h3 id="不輕易放棄才是我最大的收穫"><a href="#不輕易放棄才是我最大的收穫" class="headerlink" title="不輕易放棄才是我最大的收穫"></a>不輕易放棄才是我最大的收穫</h3><p>不過就算六角有資源不努力利用也沒用，過程中聽說就有不少人放棄完成專案開發，我很高興我能破除萬難堅持撐下去，既然選了轉職我就要走下去</p><p>也因為撐下去了才能學會更多技術，學會碰到困難要想辦法找解方，這樣 <strong>不輕易放棄的態度</strong> 是我這段時間進修得來的最大收穫</p><p>好幾次學習 React 的過程，我也曾懷疑自己能不能和隊友開發完專案的主要功能，但我就是不想放棄，都撐這麼久了，剩下最後一段路為什麼不走完？</p><hr><h2 id="如果不試一輩子都不知道自己能走這麼遠"><a href="#如果不試一輩子都不知道自己能走這麼遠" class="headerlink" title="如果不試一輩子都不知道自己能走這麼遠"></a>如果不試一輩子都不知道自己能走這麼遠</h2><p>從想轉職而開始嘗試寫程式，到發現自己不排斥，再到最後持續進修開發出專案，這之中每一步都很重要，但我想踏出第一步很關鍵 <strong>沒有第一步哪來下一步</strong></p><p>出了社會我不斷嘗試找到感興趣的領域，忘了說我本科是外語相關的，因為我知道外語始終是工具總要找到一技之長，不然就等著被取代，尤其時代進步很快，學習新技術無可避免，只能持續進修增加技能提升價值</p><p>而為了找到我真正想做的事，從畢業後就一直嘗試進修任何感興趣的領域，就這樣嘗試上了六角的前端工程師體驗營，才確定自己真的想往這條路走</p><p>現在回頭看才發現自己已經持續學習前端技術 1 年了，團隊專案也開發完成，如果我當時沒有試，我想我一輩子都不知道自己能走這麼遠</p><p>最後很感謝我的隊友和六角的老師、專題教練、助教們，你們是我撐下去的助力 <del>(想放棄時看到隊友也撐得很痛苦不知為何就又想撐下去了🤣</del>，後續團隊專案如果學了新技術可以持續優化</p><hr><p>這篇文章主要是分享自己進修前端工程師的心得，未來也會把一些遇到的開發問題或自己學習的筆記寫成文章分享</p><p>期待與大家再次空中再會啦~~~</p>]]></content>
    
    
    <summary type="html">結束 9 個月前端進修培訓，沒試過真的不知道自己能走這麼遠</summary>
    
    
    
    <category term="心得分享" scheme="http://amy6072698.github.io/amy10blog/categories/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="前端" scheme="http://amy6072698.github.io/amy10blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="心得分享" scheme="http://amy6072698.github.io/amy10blog/tags/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>2024 六角前端工程師體驗營心得</title>
    <link href="http://amy6072698.github.io/amy10blog/2024/06/09/20240609_reflections_on_learing_hexschool/"/>
    <id>http://amy6072698.github.io/amy10blog/2024/06/09/20240609_reflections_on_learing_hexschool/</id>
    <published>2024-06-09T12:36:31.000Z</published>
    <updated>2025-04-20T07:04:50.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何認識六角？"><a href="#如何認識六角？" class="headerlink" title="如何認識六角？"></a>如何認識六角？</h2><p>其實一開始對前端感興趣是在前年，做了很多調查看到一篇部落格文章特別寫到六角學院是很棒的學習環境，有助教老師不會排斥新手問問題，才下定決心先買了六角學院的影音課程</p><p>在前年年底工作繁忙期終於告一段落時，才開始看影音教學學了一陣子，但這時候的我還不太敢在 Discord 群組問問題，一是覺得不太熟悉 Discord 操作用起來怕怕的，二是覺得跟六角的助教同學不太熟就一直問感覺怪怪的，所以學習起來一直有種孤單、無力的感覺</p><h2 id="因為無力感一度走錯路"><a href="#因為無力感一度走錯路" class="headerlink" title="因為無力感一度走錯路"></a>因為無力感一度走錯路</h2><p>在今年年初這種學習上的無力感和孤單感讓我決定： <strong>要不然換一個學習平台試試看？</strong></p><p>於是我轉而找到了另一家也是線上的學習平台，他們有開前後端的教學系列課，都是線上影音課，同樣有助教跟 LINE 顧問可以問問題</p><h3 id="但是事情沒這麼簡單"><a href="#但是事情沒這麼簡單" class="headerlink" title="但是事情沒這麼簡單"></a>但是事情沒這麼簡單</h3><ul><li><p>影片是 4 年前的教學影片：影片下方沒有備註新的操作內容</p></li><li><p>助教老是不知道你在問什麼：跟他說影片幾分幾秒錄影有缺漏，他反問我有沒有看影片？</p></li><li><p>LINE 顧問只會像鬧鐘一樣過沒幾天問你進度如何：專業問題顧問不會所以沒辦法解答，我只想問我就是卡住了要怎麼有進度？</p></li></ul><p><strong>結果最後問題不是助教、也不是顧問幫忙解決的，是一個印度人解決的！</strong></p><p>沒錯！是我去網路上找了兩天資料，最後看到一個印度人的教學影片解決的，我就這樣花了十幾萬到這種平台自己找罪受，當我決定要退費時已經來不及了，因為已經看超過可以退費的影片進度了，當我再次回過頭仔細觀察這個所謂專業的前後端學習平台，他們教出的學員做出什麼作品時，那作品的程度…我覺得面試官是不可能會錄取的</p><h2 id="反正都走投無路了就再相信一次"><a href="#反正都走投無路了就再相信一次" class="headerlink" title="反正都走投無路了就再相信一次"></a>反正都走投無路了就再相信一次</h2><p>了解這個平台根本只想賺錢，不是真心想要輔導學員做出好作品、讓學員順利轉職之後，我決定果斷放棄那個有毒的學習環境，再一次尋找一個能夠讓我好好學習順利轉職的平台</p><p>就在已經對線上學習平台心灰意冷的時候，我的臉書跳出六角學院的體驗營報名資訊，點進去之前我還想著：「是不是又是一個騙錢不想認真輔導學員的學習平台」，結果看見價格時…我只覺得他們瘋了！</p><p>原本預計明年要轉職，結果遇到前一個學習平台打壞所有原定計畫，我想著 <strong>敢用這麼瘋的價格開一個月的體驗營課程，反正我也走投無路了就跟他拚了、跟他一起瘋</strong>，就這樣我報名了 2024 年六角學院的體驗營</p><h2 id="徬徨過最後才會選擇跟六角一起前進"><a href="#徬徨過最後才會選擇跟六角一起前進" class="headerlink" title="徬徨過最後才會選擇跟六角一起前進"></a>徬徨過最後才會選擇跟六角一起前進</h2><p>參加了這一個月的體驗營，我很高興瘋了那一次，再次相信六角學院真的是願意輔導學員讓學員能順利轉職的學習平台，這一個月每天都很累但是看見自己的作品、組員間討論做作業，都讓 <strong>我感覺對前端的學習終於上軌道了</strong></p><p><strong>當然上完體驗營只是開始，不過要我選擇一起學習一起前進的夥伴的話，一定非六角莫屬！</strong></p><p>在體驗營中因為知道很多人是新手所以更容易在 Discord 群組發問，小組組員背景很相近可以互相勉勵一起想出問題的解決方法，跟自己之前孤軍奮戰相比多了幾分團戰打怪的熱血，真的很喜歡這種學習氣氛</p><p>所以我決定繼續跟著六角學習前端，最後祝跟我一樣想轉職的六角夥伴都能轉職成功！</p><p>讓我們一起打怪、一起前進！</p>]]></content>
    
    
    <summary type="html">2024 年從參加六角學院前端工程師體驗營，到下定決心走向轉職</summary>
    
    
    
    <category term="心得分享" scheme="http://amy6072698.github.io/amy10blog/categories/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="前端" scheme="http://amy6072698.github.io/amy10blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="心得分享" scheme="http://amy6072698.github.io/amy10blog/tags/%E5%BF%83%E5%BE%97%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
</feed>
